    /*
     * CTable code fragment to do metatable allocation that goes inside the
     * package *_Init code.
     *
     * $Id$
     *
     * Create the master table that has the registered proc table and stuff.
     *
     *  define the following variables and subst this:
     *   table
     */

    tableCreatorPtr = (struct ctableCreatorTable *)ckalloc (sizeof (struct ctableCreatorTable));

    /* create the table for registering Tcl commands to appear as methods
     * of the table class and pass it in through Tcl's client data
     * mechanism
     */
    hashTablePtr = (Tcl_HashTable *)ckalloc (sizeof (Tcl_HashTable));
    Tcl_InitCustomHashTable (hashTablePtr, TCL_STRING_KEYS, NULL);

    tableCreatorPtr->registeredProcTablePtr = hashTablePtr;
    tableCreatorPtr->nextAutoCounter = 0;
    tableCreatorPtr->search_compare = ${table}_search_compare;
    tableCreatorPtr->sort_compare = ${table}_sort_compare;
    tableCreatorPtr->fieldNames = ${table}_fields;

    ${table}_setup ();

    /* Create the ${table}MetaObjCmd command -- it's fairly equivalent to an
     * Itcl class in that it can create its own commands with their
     * own data spaces, etc.
     */
    Tcl_CreateObjCommand(interp, "${table}", (Tcl_ObjCmdProc *) ${table}MetaObjCmd, (ClientData)tableCreatorPtr, (Tcl_CmdDeleteProc *)NULL);

