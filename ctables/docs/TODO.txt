$Id$


Make it work with UTF8 chars.

Make sure the C source file and the
shared library is newer than the scarfed file and that the CVS version
of gentable that the stuff was built with hasn't altered.  This way if
the build previously failed for some reason or the version of gentable
got updated, that we still regenerate the shared library.

Have a way to find out if a field is null out-of-band, that is, some kind of
method called is_null or the like that will tell if you if a field or fields
is null.

It's easy to make the null_value setting be local to an instance of the
table and not global to all tables of a specific type.  tbl_ptr is defined
in the big case statement -- 

be able to import from an array, including only specific variables
NO - no easy way to get names of an array from C and anyway you can just
do a foo set $key field $array(field) field2 $array(field2), etc.

Add a way for someone doing a CTable definition to specify additional
files to include.

Add a way to write methods in C and add additional C code to the stuff
being generated, from the CTable definition.  This may also involve generating
a C include file that defines stuff that is otherwise defined in the
C source file we generate, so that you don't have to specify your C
code in some kind of quoted ctable definition.

Make set return a 1 if it created the row and a 0 if it already exists.
(Uh, not sure how valuable this actually is.)

Do something like GNU autoconf/configure or dig compiler switches, etc, out
of tclConfig.sh.

DONE Add an "incr" method.

In search, make it store the native value being compared in a union in
the search component structure or something.  Compare that directly
rather than repetitively digging it out with Tcl_GetIntFromObj or
whatever, even though it's fast when it's native.

