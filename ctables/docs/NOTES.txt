
$Id$

meta table - a Tcl command that can define tables.  Automatically generated
C code.

table - a Tcl command generated by the "create" method of a meta table.
It is an instance of a table and contains zero or more rows.

The table has "get" and "set" methods that can fetch and store values into
a row of a table, and can also create, delete, and initialize rows.

row - a C struct containing some fields.



On the Mac, here's how we compile and link:

gcc -pipe -Wall -Wno-implicit-int -fno-common -c urk.c -o urk.o

gcc -pipe -dynamiclib  -Wall -Wno-implicit-int -fno-common  -Wl,-single_module -o urk4.0.dylib urk.o -L/System/Library/Frameworks/Tcl.framework/Versions/8.4 -ltclstub8.4 -ltcl




Wed Jun 28 00:16:44 CDT 2006

I've decided to punt on the fancy linked lists and cursors for this version.

I'm going to just use hashtables for indexing stuff and there will be
one and only one key per row.

A future version will have cursors and more fanciness.


Wed Jun 28 02:31:56 CDT 2006

Oh my god it's working.

Now I want to add a new method for tables, type, which will return the
name of the table type.

Also "fields" for the meta table and maybe the generated table as well.

Also "delete"

Also perhaps "exists".


Wed Jun 28 02:49:28 CDT 2006

"type" and "delete" are done.  delete returns 1 if it deleted, 0 if it didn't
exist.


